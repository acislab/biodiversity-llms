configfile: "config/defaults.yml"

from deepmerge import Merger
config = Merger([(dict, ["merge"])], ["override"], ["override"]).merge(config["defaults"], config)

LLM = config["llm"]

PRESENCE_IN_UNFILTERED = "results/input/presence-unfiltered.tsv"
PRESENCE_IN = "results/input/presence.tsv"
ABSENCE_IN = "results/input/absence.tsv"
ALL_IN = "results/input/all.tsv"
ALL_IN_SHUFFLED = "results/input/all-shuffled.tsv"
TRAIN_TEST_SPLIT = "results/input/train_test_split.tsv"

ABSENCE_VALID = "results/input/absence-valid.tsv"

PRESENCE_OUT = f"results/{LLM}/occurrence/presence.tsv"
ABSENCE_OUT = f"results/{LLM}/occurrence/absence.tsv"
ALL_OUT = f"results/{LLM}/occurrence/responses.tsv"
ALL_OUT_SHUFFLED = f"results/{LLM}/occurrence/responses.tsv"
NOTEBOOK_OUT = f"results/{LLM}/" + config["results"]["notebook"]

print(NOTEBOOK_OUT)
def make_qa_config(job):
    c = {"llm": config["llm"]}
    c |= config["qa"]["defaults"]
    c |= config["qa"][job]
    if "output_dir" not in c: c |= {"output_dir": f"results/{c['llm']}/{job}"}
    return c

config["qa"]["test"] = make_qa_config("test")
config["qa"]["occurrence"] = make_qa_config("occurrence")
config["qa"]["taxonomy"] = make_qa_config("taxonomy")

include: "rules/get-records.smk"
include: "rules/make-presence-tsv.smk"
include: "rules/make-absence-tsv.smk"
include: "rules/combine-tsv.smk"
include: "rules/get-taxonomy-alignments.smk"
include: "rules/make-taxonomy-questions.smk"
include: "rules/occ-qa-analysis.smk"
include: "rules/tax-qa-analysis.smk"

module test_qa_workflow:
    snakefile: "modules/qa.smk"
    config: config["qa"]["test"]
use rule * from test_qa_workflow as test_qa_*

module occ_qa_workflow:
    snakefile: "modules/qa.smk"
    config: config["qa"]["occurrence"]
use rule * from occ_qa_workflow as occ_qa_*

module tax_qa_workflow:
    snakefile: "modules/qa.smk"
    config: config["qa"]["taxonomy"]
use rule * from tax_qa_workflow as tax_qa_*

rule all:
    input:
        NOTEBOOK_OUT
