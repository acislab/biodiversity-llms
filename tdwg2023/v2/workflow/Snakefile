configfile: "config/defaults.yml"

LLM = config["llm"]

PRESENCE_IN_UNFILTERED = "results/input/presence-unfiltered.tsv"
PRESENCE_IN = "results/input/presence.tsv"
ABSENCE_IN = "results/input/absence.tsv"
ALL_IN = "results/input/all.tsv"
ALL_IN_SHUFFLED = "results/input/all-shuffled.tsv"

ABSENCE_VALID = "results/input/absence-valid.tsv"

PRESENCE_OUT = f"results/{LLM}/presence.tsv"
ABSENCE_OUT = f"results/{LLM}/absence.tsv"
ALL_OUT = f"results/{LLM}/all.tsv"
ALL_OUT_SHUFFLED = f"results/{LLM}/all-shuffled.tsv"
NOTEBOOK_OUT = f"results/{LLM}/results.py.ipynb"

include: "rules/get-records.smk"
include: "rules/make-presence-tsv.smk"
include: "rules/make-absence-tsv.smk"
include: "rules/combine-tsv.smk"
include: "rules/qa.smk"

rule all:
    input:
        NOTEBOOK_OUT

rule analyze_results:
    input:
        responses=ALL_OUT_SHUFFLED if config["qa_random_sample"] else ALL_OUT
    output:
        NOTEBOOK_OUT
    params:
        phrasings=lambda wildcards: config["qa_base_queries"],
        query_fields=config["qa_fields"]
    log:
        notebook=NOTEBOOK_OUT
    conda:
        "envs/analysis.yml"
    notebook:
        "notebooks/results.py.ipynb"
